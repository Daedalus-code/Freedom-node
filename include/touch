#!/bin/bash

# define touch zones in raw touchscreen coordinates (based on evtest)
ZONES=(
  "Balance:2150:1520:2230:1550"
)

# if any data
if [[ -f /tmp/touchcoords ]] &>/dev/null; then
  # get last touch coordinates from tmp file (evtest listener should write here)
  read -r x y </tmp/touchcoords || exit 0

  handle_zone() {
    case "$1" in
    Peers)
      dialog --msgbox "Peers Info:\nIPv4: ${WALLET_PEERS_IP4}\nIPv6: ${WALLET_PEERS_IP6}" 0 0
      ;;
    Balance)
      dialog --msgbox "$(cat node/getwalletinfo.tmp 2>/dev/null | grep "balance" | tr -d ' ,"' | tr ':' ' ' | column -t | tr '_' ' ')" 0 0
      ;;
    Block)
      dialog --msgbox "Block Height:\n${WALLET_HEADS}" 0 0
      ;;
    Sync)
      dialog --msgbox "Wallet Sync:\n${WALLET_SYNC}" 0 0
      ;;
    Network)
      dialog --msgbox "Network:\nIP: ${IP_ADDRESS}\nWAN: ${PUBLIC_IP}" 0 0
      ;;
    System)
      # if missing
      if [[ ! -f "$HOME_DIR"/node/hostnamectl ]] &>/dev/null; then
        echo "$(hostnamectl)" >"$HOME_DIR"/node/hostnamectl
      fi
      dialog --msgbox "$(cat "$HOME_DIR"/node/hostnamectl 2>/dev/null)" 0 0
      ;;
    *)
      echo "No action for zone: $1"
      ;;
    esac
  }

  # check if the touch falls inside a zone
  for ZONE in "${ZONES[@]}"; do
    IFS=":" read -r LABEL x1 y1 x2 y2 <<<"$ZONE"
    if ((x >= x1 && x <= x2 && y >= y1 && y <= y2)); then
      # handle zone label (display dialog)
      handle_zone "$LABEL"
      # exit the loop after the first match
      break
    fi
  done
fi

# END
