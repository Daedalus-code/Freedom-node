#!/bin/bash

################################################################################

source /etc/freedom-node/config

################################################################################

export TERM=linux

################################################################################

# home directory
HOME_DIR="$(cat /etc/freedom-node/homedir 2>/dev/null)"

################################################################################

# function to detect touch
wait_for_touch() {
  if [[ -f "$HOME_DIR"/node/display ]] &>/dev/null; then
    evtest "$TOUCH_DEVICE" | grep --line-buffered "EV_KEY.*DOWN" | head -n 1
  fi
}

################################################################################

# function to display the dialog menu
show_menu() {
  CHOICE=$(dialog --menu "Select an Option" 15 50 4 \
    "1" "Balances" \
    "2" "Peers" \
    "3" "Network" \
    "4" "Exit" \
    3>&1 1>&2 2>&3)

  case $CHOICE in
  "1")
    echo "Selected 1"
    sleep 2
    ;;
  "2")
    echo "Selected 2"
    sleep 2
    ;;
  "3")
    echo "Selected 3"
    sleep 2
    ;;
  4 | *) ;;
  esac
}

################################################################################

# main loop
for (( ; ; )); do # loop dashboard

  # detect touch event in background
  wait_for_touch &

  # run dashboard content
  source /etc/freedom-node/include/functions
  source /etc/freedom-node/include/color

  clear
  printf '%b' "
${GR:?}                 ${GR:?} Freedom-node ${REPO_VERSION:?}   $SYSTEM_DATE ${SYSTEM_CLOCK:?}
${CB:?}    /#########   ${N0:?} Patriotnode + Stakebox      ${CONTROL_STATUS:?} ${PATRIOT_STATUS:?} ${POS_STATUS:?} ${TOR_STATUS:?} ${LAN_STATUS:?}
${CB:?}   | ##______/   ${GR:?} -----------------------------------------${N0:?}
${CB:?}   | ##          ${N0:?} Load ${SYSTEM_LOAD:?} temp ${CPU_CTEMP_C:?} ${CPU_FTEMP:?}
${CB:?}   | ######      ${N0:?} FreeMem ${FREE_MEM:?}/${TOTAL_MEM:?} HDDuse ${USED_HDD:?}/${TOTAL_HDD} (${USED_HDD_P:?})
${CB:?}   | ##___/      ${N0:?} ${SYSTEM_USER:?}@${IP_ADDRESS:?} ${G0:?}⇩${N0:?} ${DOWNLOAD:?} ${R1:?}⇧${N0:?} ${UPLOAD:?}
${CB:?}   | ##          ${N0:?} ${WALLET_DAEMON:?} ${WALLET_VERSION:?} ${WALLET_CHAIN:?} Sync ${WALLET_SYNC:?}
${CB:?}   | ##          ${N0:?} WAN ${PUBLIC_IP:?} Peers ${WALLET_PEERS_TOTAL:?} ${WALLET_PEERS_IP4:?} ${WALLET_PEERS_IP6:?}
${CB:?}   | ##          ${N0:?}
${CB:?}   |__/          ${N0:?} Balance ${WALLET_BALANCES:?} Stakes ${WALLET_POS:?} ${WALLET_INPUTS:?}
${CB:?}                 ${N0:?} TxCount ${WALLET_TXCOUNT:?} Mempool ${WALLET_MEMPOOL:?} Block ${WALLET_HEADS:?}
${CB:?}   FreedomCoin   ${N0:?} ${TIMELINE:?}

${TX:?}${WALLET_TXLAST:?}

${LAST_LOG:?}
"

  ##############################################################################

  # check if touch was detected and run the menu if touched
  if wait_for_touch; then
    stop_dashboard # optional: Stop the dashboard before opening menu
    show_menu
    # restart the dashboard after exiting menu
  fi

  ##############################################################################
  # Wait for n seconds before updating
  sleep "${TIME:?}"
done

# END
